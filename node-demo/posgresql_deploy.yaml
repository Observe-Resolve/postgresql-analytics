apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:

      containers:
        - name: postgres-container
          image: postgres:15.1
          args: ["-c","pg_stat_statements.track=all","-c","shared_preload_libraries=pg_stat_statements","-c","pg_stat_statements.track=all","-c","session_preload_libraries=auto_explain","-c","compute_query_id=on","-c","pg_store_plans.plan_format=json","-c", "logging_collector=off","-c","log_destination=stderr","-c", "log_statement=all","-c","log_duration=1"]
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name:  init-statement
              readOnly: true
          ports:
            - containerPort: 5432
      volumes:
        - name: init-statement
          configMap:
            name: db-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres-demo
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - name: postgres-service-port
      port: 5432
      targetPort: 5432
---